@model IEnumerable<InmobiliariaAlcaraz.Models.Contrato>
@using InmobiliariaAlcaraz.Models
@using System.Security.Claims
@{
    ViewData["Title"] = "Listado de Contratos";
    var paginaActual = ViewBag.PaginaActual as int? ?? 1;
    var totalPaginas = ViewBag.TotalPaginas as int? ?? 1;
    var busquedaActiva = ViewBag.BusquedaActiva as bool? ?? false;
    var busquedaModel = ViewBag.BusquedaModel as BusquedaContratosViewModel ?? new BusquedaContratosViewModel();
    var today = DateTime.Today.ToString("yyyy-MM-dd");
    var multaStatus = ViewBag.MultaStatus as Dictionary<int, (string Status, bool HasMultaPending)>;
}

<h1>Contratos</h1>

<div class="card mb-3">
    <div class="card-body p-3">
        @if (!ViewContext.ModelState.IsValid && busquedaActiva)
        {
            <div asp-validation-summary="All" class="alert alert-danger" role="alert"></div>
        }
        <form id="busquedaForm" asp-action="Index" method="get" class="row g-3 align-items-center">
            <div class="col-md-3 col-6">
                <label for="busqueda_FechaDesde" class="form-label mb-0">Desde</label>
                <input id="busqueda_FechaDesde" name="busqueda.FechaDesde" type="date" class="form-control" value="@(busquedaModel.FechaDesde.HasValue ? busquedaModel.FechaDesde.Value.ToString("yyyy-MM-dd") : "")" />
                <span asp-validation-for="@busquedaModel.FechaDesde" class="text-danger"></span>
            </div>
            <div class="col-md-3 col-6">
                <label for="busqueda_FechaHasta" class="form-label mb-0">Hasta</label>
                <input id="busqueda_FechaHasta" name="busqueda.FechaHasta" type="date" class="form-control" value="@(busquedaModel.FechaHasta.HasValue ? busquedaModel.FechaHasta.Value.ToString("yyyy-MM-dd") : "")" />
                <span asp-validation-for="@busquedaModel.FechaHasta" class="text-danger"></span>
            </div>
            <div class="col-md-3 col-6">
                <label for="busqueda_PlazoDias" class="form-label mb-0">Plazo (días)</label>
                <select id="busqueda_PlazoDias" name="busqueda.PlazoDias" class="form-select">
                    <option value="">Ninguno</option>
                    <option value="30" selected="@(busquedaModel.PlazoDias == 30 ? "selected" : null)">30 días</option>
                    <option value="60" selected="@(busquedaModel.PlazoDias == 60 ? "selected" : null)">60 días</option>
                    <option value="90" selected="@(busquedaModel.PlazoDias == 90 ? "selected" : null)">90 días</option>
                </select>
                <span asp-validation-for="@busquedaModel.PlazoDias" class="text-danger"></span>
            </div>
            <div class="col-md-3 col-12 text-end">
                <button type="submit" class="btn btn-primary me-2">
                    <i class="fa-solid fa-magnifying-glass"></i> Buscar
                </button>
                @if (busquedaActiva)
                {
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fa-solid fa-circle-xmark"></i> Limpiar
                    </a>
                }
            </div>
        </form>
    </div>
</div>

@if (busquedaActiva && Model.Any())
{
    <div class="alert alert-info py-2 mb-3">
        <i class="fa-solid fa-circle-info"></i> Mostrando contratos
        @if (busquedaModel.PlazoDias.HasValue)
        {
            @: que terminan en @busquedaModel.PlazoDias días
        }
        else if (busquedaModel.FechaDesde.HasValue && busquedaModel.FechaHasta.HasValue)
        {
            @: vigentes entre @busquedaModel.FechaDesde.Value.ToString("dd/MM/yyyy") y @busquedaModel.FechaHasta.Value.ToString("dd/MM/yyyy")
        }
    </div>
}

<div class="table-responsive">
    @if (!Model.Any())
    {
        <div class="alert alert-warning">
            @if (busquedaActiva)
            {
                @: No se encontraron contratos vigentes en el rango de fechas seleccionado.
            }
            else
            {
                @: No hay contratos registrados.
            }
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th class="col-1">N°</th>
                    <th class="col-2">Inmueble</th>
                    <th class="col-2">Inquilino</th>
                    <th class="col-1">Monto</th>
                    <th class="col-1">Inicio</th>
                    <th class="col-1">Fin</th>
                    <th class="col-1">Pagos Restantes</th>
                    <th class="col-1">Estado</th>
                    <th class="col-1">Multa</th>
                    <th class="col-2">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var multaInfo = multaStatus != null && multaStatus.ContainsKey(item.IdContrato) ? multaStatus[item.IdContrato] : (Status: "N/A", HasMultaPending: false);
                    <tr>
                        <td>@item.IdContrato</td>
                        <td>@(item.Inmueble?.IdInmueble) - @item.Inmueble?.Direccion</td>
                        <td>@(item.Inquilino?.Nombre) @item.Inquilino?.Apellido</td>
                        <td class="text-nowrap">@item.MontoMensual.ToString("C")</td>
                        <td>@item.FechaInicio.ToString("dd/MM/yy")</td>
                        <td>@(item.FechaFinAnticipado.HasValue ? item.FechaFinAnticipado.Value.ToString("dd/MM/yy") : item.FechaFin.ToString("dd/MM/yy"))</td>                        <td>
                            @item.PagosEsperados
                            @if (multaInfo.HasMultaPending)
                            {
                                <span class="text-danger"> + multa</span>
                            }
                        </td>
                        <td>
                            @if (item.Estado == 1)
                            {
                                <span class="badge bg-success">Activo</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactivo</span>
                            }
                        </td>
                        <td>
                            @switch (multaInfo.Status)
                            {
                                case "Pagada":
                                    <span class="badge bg-success">Pagada</span>
                                    break;
                                case "No pagada":
                                    <span class="badge bg-danger">No pagada</span>
                                    break;
                                case "Anulada":
                                    <span class="badge bg-warning">Anulada</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">N/A</span>
                                    break;
                            }
                        </td>
                        <td>
                            <div class="d-flex gap-1 flex-wrap">
                                <a asp-action="Detalle" asp-route-id="@item.IdContrato" class="btn btn-success btn-sm action-btn" title="Crear Pago">
                                    <i class="fa-solid fa-plus"></i>
                                </a>
                                @if (item.Estado == 1)
                                {
                                    <a asp-action="Detalle" asp-route-id="@item.IdContrato" class="btn btn-warning btn-sm action-btn" title="Ver Detalles">
                                        <i class="fa-solid fa-eye"></i>
                                    </a>
                                    <button type="button" class="btn btn-primary btn-sm action-btn" data-bs-toggle="modal" data-bs-target="#renovarContratoModal" 
                                            data-id-contrato="@item.IdContrato"
                                            data-id-inquilino="@item.IdInquilino"
                                            data-inquilino-nombre="@(item.Inquilino?.Nombre) @(item.Inquilino?.Apellido)"
                                            data-id-inmueble="@item.IdInmueble"
                                            data-inmueble-direccion="@item.Inmueble?.Direccion"
                                            data-monto-mensual="@item.MontoMensual"
                                            data-fecha-inicio="@item.FechaFin.AddDays(1).ToString("yyyy-MM-dd")"
                                            data-fecha-fin="@item.FechaFin.AddDays(1).AddMonths(1).ToString("yyyy-MM-dd")"
                                            title="Renovar Contrato">
                                        <i class="fa-solid fa-rotate"></i>
                                    </button>
                                    @if (User.IsInRole("Administrador"))
                                    {
                                        <a asp-action="FinalizarAnticipado" asp-route-id="@item.IdContrato" class="btn btn-danger btn-sm action-btn" title="Finalizar Anticipado">
                                            <i class="fa-solid fa-stop-circle"></i>
                                        </a>
                                    }
                                }
                                <a asp-action="Detalle" asp-route-id="@item.IdContrato" class="btn btn-info btn-sm action-btn" title="Detalles">
                                    <i class="fa-solid fa-info-circle"></i>
                                </a>
                                @if (User.IsInRole("Administrador"))
                                {
                                    <a asp-action="Eliminar" asp-route-id="@item.IdContrato" class="btn btn-danger btn-sm action-btn" title="Eliminar">
                                        <i class="fa-solid fa-trash"></i>
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

<div class="modal fade" id="renovarContratoModal" tabindex="-1" aria-labelledby="renovarContratoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="renovarContratoModalLabel">Renovar Contrato</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-controller="Contrato" asp-action="Crear" method="post">
                <div class="modal-body">
                    <input type="hidden" name="IdInmueble" id="renovarIdInmueble" />
                    <input type="hidden" name="IdInquilino" id="renovarIdInquilino" />
                    <input type="hidden" name="IdUsuarioCreacion" value="@User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)" />
                    <input type="hidden" name="FechaCreacion" value="@DateTime.Now" />
                    <input type="hidden" name="Estado" value="1" />
                    <input type="hidden" name="MontoMensual" id="renovarMontoMensualHidden" />

                    <div class="mb-3">
                        <label class="form-label">Inmueble</label>
                        <input type="text" class="form-control" id="renovarInmuebleDisplay" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Inquilino</label>
                        <input type="text" class="form-control" id="renovarInquilinoDisplay" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Monto Mensual</label>
                        <input type="text" class="form-control" id="renovarMontoMensual" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Fecha de Inicio</label>
                        <input type="date" class="form-control" name="FechaInicio" id="renovarFechaInicio" required min="@today" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Fecha de Fin</label>
                        <input type="date" class="form-control" name="FechaFin" id="renovarFechaFin" required />
                    </div>
                    <div id="renovarDateError" class="text-danger" style="display: none;"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" id="renovarSubmitButton" class="btn btn-primary">Renovar Contrato</button>
                </div>
            </form>
        </div>
    </div>
</div>

<nav aria-label="Paginación">
    <ul class="pagination justify-content-center">
        <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
            @if (busquedaActiva)
            {
                <a class="page-link" asp-action="Index" 
                   asp-route-pagina="@(paginaActual - 1)"
                   asp-route-busqueda.FechaDesde="@(busquedaModel.FechaDesde.HasValue ? busquedaModel.FechaDesde.Value.ToString("yyyy-MM-dd") : "")"
                   asp-route-busqueda.FechaHasta="@(busquedaModel.FechaHasta.HasValue ? busquedaModel.FechaHasta.Value.ToString("yyyy-MM-dd") : "")"
                   asp-route-busqueda.PlazoDias="@(busquedaModel.PlazoDias.HasValue ? busquedaModel.PlazoDias.Value : "")">
                    <i class="fa-solid fa-chevron-left"></i>
                </a>
            }
            else
            {
                <a class="page-link" asp-action="Index" asp-route-pagina="@(paginaActual - 1)">
                    <i class="fa-solid fa-chevron-left"></i>
                </a>
            }
        </li>
        
        @for (int i = 1; i <= totalPaginas; i++)
        {
            <li class="page-item @(i == paginaActual ? "active" : "")">
                @if (busquedaActiva)
                {
                    <a class="page-link" asp-action="Index" 
                       asp-route-pagina="@i"
                       asp-route-busqueda.FechaDesde="@(busquedaModel.FechaDesde.HasValue ? busquedaModel.FechaDesde.Value.ToString("yyyy-MM-dd") : "")"
                       asp-route-busqueda.FechaHasta="@(busquedaModel.FechaHasta.HasValue ? busquedaModel.FechaHasta.Value.ToString("yyyy-MM-dd") : "")"
                       asp-route-busqueda.PlazoDias="@(busquedaModel.PlazoDias.HasValue ? busquedaModel.PlazoDias.Value : "")">@i</a>
                }
                else
                {
                    <a class="page-link" asp-action="Index" asp-route-pagina="@i">@i</a>
                }
            </li>
        }
        
        <li class="page-item @(paginaActual >= totalPaginas ? "disabled" : "")">
            @if (busquedaActiva)
            {
                <a class="page-link" asp-action="Index" 
                   asp-route-pagina="@(paginaActual + 1)"
                   asp-route-busqueda.FechaDesde="@(busquedaModel.FechaDesde.HasValue ? busquedaModel.FechaDesde.Value.ToString("yyyy-MM-dd") : "")"
                   asp-route-busqueda.FechaHasta="@(busquedaModel.FechaHasta.HasValue ? busquedaModel.FechaHasta.Value.ToString("yyyy-MM-dd") : "")"
                   asp-route-busqueda.PlazoDias="@(busquedaModel.PlazoDias.HasValue ? busquedaModel.PlazoDias.Value : "")">
                    <i class="fa-solid fa-chevron-right"></i>
                </a>
            }
            else
            {
                <a class="page-link" asp-action="Index" asp-route-pagina="@(paginaActual + 1)">
                    <i class="fa-solid fa-chevron-right"></i>
                </a>
            }
        </li>
    </ul>
</nav>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(function() {
            $('#busquedaForm').submit(function(e) {
                const fechaDesde = $('#busqueda_FechaDesde').val();
                const fechaHasta = $('#busqueda_FechaHasta').val();
                const plazoDias = $('#busqueda_PlazoDias').val();

                if (plazoDias) {
                    if (plazoDias != 30 && plazoDias != 60 && plazoDias != 90) {
                        alert('El plazo debe ser 30, 60 o 90 días.');
                        e.preventDefault();
                        return false;
                    }
                    return true;
                }

                if (fechaDesde && fechaHasta) {
                    const dateDesde = new Date(fechaDesde);
                    const dateHasta = new Date(fechaHasta);

                    if (dateHasta < dateDesde) {
                        alert('La fecha "Hasta" no puede ser anterior a la fecha "Desde".');
                        e.preventDefault();
                        return false;
                    }
                } else {
                    alert('Por favor, seleccione ambas fechas o un plazo.');
                    e.preventDefault();
                    return false;
                }
                return true;
            });

            $('#renovarContratoModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var idContrato = button.data('id-contrato');
                var idInquilino = button.data('id-inquilino');
                var inquilinoNombre = button.data('inquilino-nombre');
                var idInmueble = button.data('id-inmueble');
                var inmuebleDireccion = button.data('inmueble-direccion');
                var montoMensual = button.data('monto-mensual');
                var fechaInicio = button.data('fecha-inicio');
                var fechaFin = button.data('fecha-fin');

                var modal = $(this);
                modal.find('#renovarIdInmueble').val(idInmueble);
                modal.find('#renovarIdInquilino').val(idInquilino);
                modal.find('#renovarInmuebleDisplay').val(inmuebleDireccion);
                modal.find('#renovarInquilinoDisplay').val(inquilinoNombre);
                modal.find('#renovarMontoMensual').val(montoMensual.toLocaleString('es-AR', { style: 'currency', currency: 'ARS' }));
                modal.find('#renovarMontoMensualHidden').val(parseFloat(montoMensual).toFixed(2));
                modal.find('#renovarFechaInicio').val(fechaInicio);
                modal.find('#renovarFechaFin').val(fechaFin);

                updateRenovarFechaFinMin(fechaInicio);
            });

            function updateRenovarFechaFinMin(fechaInicio) {
                if (fechaInicio) {
                    var dateInicio = new Date(fechaInicio);
                    var minFechaFin = new Date(dateInicio);
                    minFechaFin.setMonth(dateInicio.getMonth() + 1);
                    if (minFechaFin.getDate() < dateInicio.getDate()) {
                        minFechaFin.setDate(dateInicio.getDate());
                    }
                    var minFechaFinStr = minFechaFin.toISOString().split('T')[0];
                    $('#renovarFechaFin').attr('min', minFechaFinStr);

                    var currentFechaFin = $('#renovarFechaFin').val();
                    if (!currentFechaFin || new Date(currentFechaFin) < minFechaFin) {
                        $('#renovarFechaFin').val(minFechaFinStr);
                    }
                } else {
                    $('#renovarFechaFin').removeAttr('min');
                    $('#renovarFechaFin').val('');
                }
                validateRenovarDates();
            }

            $('#renovarFechaInicio').on('change', function() {
                updateRenovarFechaFinMin($(this).val());
            });

            function validateRenovarDates() {
                var fechaInicio = $('#renovarFechaInicio').val();
                var fechaFin = $('#renovarFechaFin').val();
                var idInmueble = $('#renovarIdInmueble').val();

                $('#renovarDateError').hide();
                $('#renovarSubmitButton').prop('disabled', false);

                if (fechaInicio && fechaFin && idInmueble) {
                    var dateInicio = new Date(fechaInicio);
                    var dateFin = new Date(fechaFin);
                    var minFechaFin = new Date(dateInicio);
                    minFechaFin.setMonth(dateInicio.getMonth() + 1);
                    if (minFechaFin.getDate() < dateInicio.getDate()) {
                        minFechaFin.setDate(dateInicio.getDate());
                    }

                    if (dateFin < minFechaFin) {
                        $('#renovarDateError').text('El contrato debe tener una duración mínima de un mes').show();
                        $('#renovarSubmitButton').prop('disabled', true);
                        return;
                    }

                    $.ajax({
                        url: '@Url.Action("ValidarFechas", "Contrato")',
                        type: 'GET',
                        data: {
                            idInmueble: idInmueble,
                            fechaInicio: fechaInicio,
                            fechaFin: fechaFin
                        },
                        success: function(result) {
                            if (result.isValid) {
                                $('#renovarDateError').hide();
                                $('#renovarSubmitButton').prop('disabled', false);
                            } else {
                                $('#renovarDateError').text('Las fechas seleccionadas se solapan con un contrato existente').show();
                                $('#renovarSubmitButton').prop('disabled', true);
                            }
                        },
                        error: function() {
                            $('#renovarDateError').text('Error al validar las fechas').show();
                            $('#renovarSubmitButton').prop('disabled', true);
                        }
                    });
                } else {
                    $('#renovarDateError').text('Por favor, seleccione ambas fechas').show();
                    $('#renovarSubmitButton').prop('disabled', true);
                }
            }

            $('#renovarFechaFin').on('change', validateRenovarDates);

            $('#renovarContratoModal form').submit(function(e) {
                var fechaInicio = $('#renovarFechaInicio').val();
                var fechaFin = $('#renovarFechaFin').val();

                if (!fechaInicio || !fechaFin) {
                    $('#renovarDateError').text('Por favor, seleccione ambas fechas').show();
                    e.preventDefault();
                    return false;
                }

                var dateInicio = new Date(fechaInicio);
                var dateFin = new Date(fechaFin);
                var minFechaFin = new Date(dateInicio);
                minFechaFin.setMonth(dateInicio.getMonth() + 1);
                if (minFechaFin.getDate() < dateInicio.getDate()) {
                    minFechaFin.setDate(dateInicio.getDate());
                }

                if (dateFin < minFechaFin) {
                    $('#renovarDateError').text('El contrato renovado debe tener una duración mínima de un mes').show();
                    e.preventDefault();
                    return false;
                }

                var isValid = false;
                $.ajax({
                    url: '@Url.Action("ValidarFechas", "Contrato")',
                    type: 'GET',
                    async: false,
                    data: {
                        idInmueble: $('#renovarIdInmueble').val(),
                        fechaInicio: fechaInicio,
                        fechaFin: fechaFin
                    },
                    success: function(result) {
                        isValid = result.isValid;
                        if (!isValid) {
                            $('#renovarDateError').text('Las fechas seleccionadas se solapan con un contrato existente').show();
                        }
                    },
                    error: function() {
                        $('#renovarDateError').text('Error al validar las fechas').show();
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    return false;
                }

                return true;
            });
        });
    </script>
}